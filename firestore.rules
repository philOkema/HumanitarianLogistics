rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        request.auth.token.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && 
        request.auth.uid == userId;
    }
    
    function isValidRole() {
      return request.resource.data.role in ['admin', 'staff', 'donor', 'beneficiary'];
    }

    // Users collection rules
    match /users/{userId} {
      // Allow users to read their own document
      allow read: if isOwner(userId);
      
      // Allow admins to read any user document
      allow read: if isAdmin();
      
      // Allow users to update their own document (except role)
      allow update: if isOwner(userId) && 
        (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['role']));
      
      // Only admins can update roles
      allow update: if isAdmin() && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role']) &&
        isValidRole();
      
      // Only admins can create new user documents
      allow create: if isAdmin() && isValidRole();
      
      // Only admins can delete user documents
      allow delete: if isAdmin();
    }

    // Other collections can be added here with similar rules
    // For example:
    match /inventory/{itemId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || request.auth.token.role == 'staff';
    }
    
    match /donations/{donationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() || request.auth.token.role == 'staff';
    }
    
    match /aid-requests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAdmin() || 
        (isOwner(resource.data.userId) && 
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']));
      allow delete: if isAdmin();
    }
  }
} 